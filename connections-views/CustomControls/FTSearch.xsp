<?xml version="1.0" encoding="UTF-8"?>
<xp:view xmlns:xp="http://www.ibm.com/xsp/core">
	<xp:this.dataContexts>
		<xp:dataContext var="columns"><xp:this.value><![CDATA[${javascript:
			var paramCols = compositeData.columns
			var result = new java.util.ArrayList(paramCols.length)
			for(var i = 0; i < paramCols.length; i++) {
				result.add(paramCols[i])
			}
			result
		}]]></xp:this.value></xp:dataContext>
		<xp:dataContext var="viewData"><xp:this.value><![CDATA[${javascript:
			var paramCols = compositeData.columns
			var result = new java.util.ArrayList(paramCols.length)
			for(var i = 0; i < paramCols.length; i++) {
				result.add(paramCols[i])
			}
			
			var searchDB = null
			var databaseName = compositeData.databaseName
			if(databaseName != null && databaseName != "") {
				var server = ""
				var filePath = ""
				if(databaseName.contains("!!")) {
					server = @Left(databaseName, "!!")
					filePath = @Right(databaseName, "!!")
				} else {
					server = database.getServer()
					filePath = databaseName
				}
				searchDB = session.getDatabase(server, filePath)
			} else {
				searchDB = database
			}
			
			new frostillicus.SortableMapView(searchDB.FTSearch(compositeData.search), result)
		}]]></xp:this.value></xp:dataContext>
	</xp:this.dataContexts>
	<xp:this.afterPageLoad><![CDATA[#{javascript:
		var ftView = getComponent("viewPanel")
		// These trinary operators are to check for null
		frostillicus.FTSearchHelper.addColumns(ftView, columns, compositeData.showAsLinks ? true : false, compositeData.databaseName, compositeData.readOnly ? compositeData.readOnly : false)
		if(compositeData.sortColumn) {
			var order = compositeData.sortOrder ? compositeData.sortOrder : "ascending"
			getComponent("viewPanel").getValue().setResortOrder(compositeData.sortColumn, order)
		}
	}]]></xp:this.afterPageLoad>
	
	<!-- Seems like target="" doesn't work on the view panel -->
	<xp:eventHandler event="onClientLoad" submit="false" rendered="#{compositeData.target != null}">
		<xp:this.script><![CDATA[
			var links = dojo.byId("#{id:viewPanel}").getElementsByTagName("a")
			dojo.forEach(links, function(a) {
				a.target = "#{javascript:compositeData.target}"
			})
		]]></xp:this.script>
	</xp:eventHandler>
	
	<xp:viewPanel id="viewPanel" value="#{viewData}" rows="${javascript:parseInt(param.rows, 10)}">
		<xp:this.facets>
			<xp:pager partialRefresh="true" layout="Previous Group Next" xp:key="headerPager" id="pager1" pageCount="4"
				rendered="#{javascript:getComponent('viewPanel').value.getRowCount() &gt; getComponent('viewPanel').rows}" />
			<xp:pager partialRefresh="true" layout="Previous Group Next" xp:key="footerPager" id="pager4" pageCount="4"
				rendered="#{javascript:getComponent('viewPanel').value.getRowCount() &gt; getComponent('viewPanel').rows}"/>
		</xp:this.facets>
		<xp:this.viewStyleClass><![CDATA[#{javascript:
			var classes = ["notesView"]
			if(getComponent('viewPanel').value.getRowCount() <= getComponent('viewPanel').rows) {
				classes.push("hideHeader")
				classes.push("hideFooter")
			} else {
				if(param.containsKey("hideHeader")) classes.push("hideHeader")
				if(param.containsKey("hideFooter")) classes.push("hideFooter")
			}
			classes.join(" ")
		}]]></xp:this.viewStyleClass>
	</xp:viewPanel>
</xp:view>
